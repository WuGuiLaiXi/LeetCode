TCP和UDP的区别
面向连接             无连接 
提供可靠服务         不可靠服务 尽最大努力交付
传输效率较低         传输效率高 适用于高速传输和实时性有较高的通信或广播通信
点对点 一对一连接    一对一 一对多 多对一 多对多的交互通信


什么是物理结构
数据的物理结构就是数据存储在磁盘中的方式。
官方语言为：数据结构在计算机中的表示（又称映像）称为数据的物理结构，或称存储结构。
它所研究的是数据结构在计算机中的实现方法，包括数据结构中元素的表示及元素间关系的表示。
顺序存储，链式存储，散列，索引

什么是逻辑结构
所谓逻辑结构就是数据与数据之间的关联关系，准确的说是数据元素之间的关联关系。
集合结构、线性结构、树状结构和网络结构。也可以统一的分为线性结构和非线性结构。


什么是高级语言 什么是低级语言
1.高级语言：java C 以我们人类逻辑思维习惯的语言  但是最终 高级语言都会转化成低级语言 从而让计算机可以识别
优点：实现效率高，可维护性好，可移植性好
缺点：执行效率低，对硬件的可控性弱，目标代码大，
2.低级语言： 接近 机器的运行处理逻辑的语言 
优点：执行效率高，对硬件的可控性强，目标代码小
缺点：实现效率低，可维护性差，可移植性差

什么是单元测试

是指对软件中的最小可测试单元进行检查和验证 如C中的一个函数 java中的一个类 或一个窗口的实现
单元测试就是在软件开发的功能中 最小的可以被测试的功能模块



什么是载波,分组


什么是DFD

数据流图DFD是描述系统中数据流程的一种图形工具，
它标志了一个系统的逻辑输入和逻辑输出，以及把逻辑输入转换逻辑输出所需的加工处理。
它从数据传递和加工角度，以图形方式来表达系统的逻辑功能、数据在系统内部的逻辑流向和逻辑变换过程，
是结构化系统分析方法的主要表达工具及用于表示软件模型的一种图示方法。


编译和解释器是什么
编译 Compile：把整个程序源代码翻译成另外一种代码，然后等待被执行，发生在运行之前，产物是「另一份代码」。
解释 Interpret：把程序源代码一行一行的读懂然后执行，发生在运行时，产物是「运行结果」。


什么是白盒测试  黑盒测试

白盒测试：是通过程序的源代码进行测试而不使用用户界面。这种类型的测试需要从代码句法发现内部代码在算法，溢出，路径

，条件等等中的缺点或者错误，进而加以修正。

黑盒测试：是通过使用整个软件或某种软件功能来严格地测试, 而并没有通过检查程序的源代码或者很清楚地了解该软件的源代

码程序具体是怎样设计的。

测试人员通过输入他们的数据然后看输出的结果从而了解软件怎样工作。在测试时，把程序看作一个不能打开的黑盆子，在完全

不考虑程序内部结构和内部特性的情况下，测试者在程序接口进行测试，它只检查程序功能是否按照需求规格说明书的规定正常

使用，程序是否能适当地接收和正确的输出。

二者最大的区别应该就是测试对象不一样，白盒测试主要针对的是程序代码逻辑，黑盒测试主要针对的是程序所展现给用户的功

能，简单的说就是前者测试后台程序后者测试前台展示功能。



什么是视图

视图是从一个或者几个基本表（或视图）导出的表。它与基本表不同，是一个虚表。

数据库中只存放视图的定义，而不存放视图对应的数据，这些数据仍存放在原来的基本表中。
所以一旦基本表中发生数据变化，从视图中查询出的数据也就随之改变了。
从这个意义上讲，视图就是一个窗口，通过视图可以看到数据库中自己想了解的数据变化。



网络三要素是什么

计算机设备、通信线路及连接设备和网络协议



什么是软件的BUG

1.缺陷的定义：计算机软件或者程序中存在的某种破坏正常运行能力的问题、错误、或者隐藏的功能缺陷。缺陷的存在会导致软

件在产品在某些软件产品在某些程度上不能满足用户需求。


标准定义：从产品外部看，缺陷是软件产品开发和维护中存在的错误、毛病等各种问题。从产品外部看，缺陷是系统所需要实现

的某种功能的失效或者违背。



UML视图的作用

UML视图及其作用

UML（UnifiedModelingLanguage，统一建模语言）是一组用于描述OOAD过程的图形化表达方式。

UML为交流面向对象的设计中的需求，行为、体系结构的实现提供了一套综合的表示法。

UML由9个不同类型的图组成：

用例图：显示了系统的外部可视行为。
UML视图中的用例图描述了系统外的人员和系统的交互动作，以及系统的响应，该类型的图可以用于描述系统的功能需求。

活动图：显示系统行为的峡谷纳西描述。
UML视图中的活动图描述了单个功能需求内部的细节行为，包括基本的场景和一些可选的场景。

组件图：显示了系统的体系结构。
UML视图中的组件图描述了系统的可部署单元（可执行文件，组件，数据存储和其他一些内容）以及一些借口，可部署单元通过这

些接口进行交互，该图可以用于研究系统的体系结构。

顺序图：显示了对象随着时间的交互。
UML视图中的顺序图描述了某个功能需求的路径或场景内相对时间的详细行为，该图可用于理解系统元素之间的消息流程。

协作图：显示了对象的交互，强调对象之间的关系。（在UML2.0里面找不到了）

类图：显示了类的定义和关系。
UML视图中的类图描述了系统设计中的类和接口，以及他们之间的关系。该图可用于定义内部的，面向对象的代码结构。

状态图：显示了响应时间的状态改变。
UML视图中的状态图描述了系统如何改变状态以相应内部的和外部的事件，确保每个事件都被适当的处理。

部署图：显示了系统的物理体系结构。
UML视图中的部署图描述了系统的可部署单元（应用，组件，数据存储等）如何被赋予不同的节点，这些节点如何交互通信，用于

系统映射和负载的研究。

包图：显示了设计的层次结构。
UML视图中的包图描述了设计的相关元素如何按组结合在一起，以及他们之间的关系



ARP协议 
ARP协议可实现通过IP地址获得对应主机的物理地址（MAC地址）。
所谓的“地址解析”，就是主机在发送帧之前将目标IP地址转换成目标MAC地址的过程。ARP协议的基本功能就是通过目标设备的

IP地址，查询目标设备的MA地址，以保证主机间相互通信的顺利进行。
ARP协议要求通信的主机双方必须在同一个物理网段（即局域网环境）！



数据库三模型

数据模型也是一种模型，它是对现实世界数据特征的抽象，用来描述数据，组织数据和对数据进行操作的。需要我们知道的是：

数据模型是数据库系统的核心和基础。

第一类数据模型：
概念模型（按用户的观点来对数据和信息建模，主要用于数据库设计）

第二类数据模型包括：
逻辑模型（按照计算机系统的观点对数据建模，主要用于数据库管理系统的实现）
物理模型?（对数据底层的抽象，描述数据在系统内部的表示方式和存取方法，是面向计算机系统的）



流量控制 

1.1 什么是流量控制？流量控制的目的？

如果发送者发送数据过快，接收者来不及接收，那么就会有分组丢失。为了避免分组丢失，控制发送者的发送速度，使得接收者

来得及接收，这就是流量控制。流量控制根本目的是防止分组丢失，它是构成TCP可靠性的一方面。



1.2 如何实现流量控制？

主要的方式就是接收方返回的 ACK 中会包含自己的接收窗口的大小，并且利用大小来控制发送方的数据发送。



1.3 流量控制引发的死锁？怎么避免死锁的发生？

当发送者收到了一个窗口为0的应答，发送者便停止发送，等待接收者的下一个应答。但是如果这个窗口不为0的应答在传输过程

丢失，发送者一直等待下去，而接收者以为发送者已经收到该应答，等待接收新数据，这样双方就相互等待，从而产生死锁。

为

了避免流量控制引发的死锁，TCP使用了持续计时器。每当发送者收到一个零窗口的应答后就启动该计时器。时间一到便主动发送

报文询问接收者的窗口大小。若接收者仍然返回零窗口，则重置该计时器继续等待；若窗口不为0，则表示应答报文丢失了，此时

重置发送窗口后开始发送，这样就避免了死锁的产生。




互联网是OSI中那层实现的




NULL值的特点
NULL是数据库中特有的数据类型，当一条记录的某个列为NULL，则表示这个列的值是未知的、是不确定的。既然是未知的，就有

无数种的可能性。因此，NULL并不是一个确定的值。

数据库中，空值表示值未知。空值不同于空白或零值。没有两个相等的空值。比较两个空值或将空值与任何其他值相比均返回未

知，这是因为每个空值均为未知。



设备驱动是干嘛的
驱动程序，指的是设备驱动程序（Device Driver），是一种可以使计算机和设备进行相互通信的特殊程序。
作用：驱动程序主要作用是计算机系统与硬件设备之间完成数据传送的功能，只有借助驱动程序，两者才能通信并完成特定的功

能。驱动程序是介于操作系统与硬件之间的媒介，实现双向的传达，将硬件设备本身具有的功能传达给操作系统，同时也将操作

系统的标准指令传达给硬件设备。









自项向下分析方法有几种

（ 1 ）LL（1）分析法
（ 2 ）递归下降分析法




操作系统都有什么作用

从一般用户的观点，可把OS 看做是用户与计算机硬件系统之间的接口；
从资源管理的观点看，则可把OS视为计算机系统资源的管理者。
另外，OS实现了对计算机资源的抽象，隐藏了对硬件操作的细节，使用户能更方便
地使用机器。



PPP协议


PPP（点对点协议）是一种数据链路层协议，用于在两台直接连接的（点对点）计算机之间传输数据报
PPP协议也称为RFC 1661，用于提供计算机之间数据链接的非常基本的连接级别，被广泛用于宽带通信所需的更重和更快的连接

上。

有许多物理介质用于点对点连接，例如简单的串行电缆，移动电话和电话线。
当两台计算机直接连接时，两端都会发送配置请求。连接计算机后，PPP处理链路控制，数据控制和协议封装。

PPP由三个主要组成部分组成：

封装多协议数据报的机制
PPP允许多个网络层协议在同一通信链路上运行。对于所使用的每个网络层协议，提供单独的网络控制协议（NCP）以便封装和协

商多个网络层协议的选项。并且可以提供诸如校验和之类的其他功能以检测传输错误。

链路控制协议（LCP）
LCP负责建立，维护和拆除两个端点之间的连接；LCP还测试链接并确定它是否处于活动状态。
LCP还提供了身份验证，错误检测，纠错，压缩和加密等功能

网络控制协议（NCP）
初始化PPP协议栈以处理多种网络层协议，用于建立和配置不同类型的网络层协议。例如IPv4，IPv6和无连接网络协议（CLNP）

。



软件和程序的区别


软件：是一系列按照特定顺序组织的计算机数据和指令的集合

程序，是指依赖于操作系统而工作的、具有特定功能的程序

要明白 软件 = 程序+文档 = 数据结构+算法+文档 另外，软件是包含程序的有机集合体，程序是软件的必要元素。任何软件都

有可运行的程序，至少一个。比如：操作系统给的工具软件计算器等，很多都只有一个可运行程序






